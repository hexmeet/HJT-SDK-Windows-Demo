<Window x:Class="EasyVideoWin.View.MediaStatisticsView"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
        xmlns:local="clr-namespace:EasyVideoWin.View"
        xmlns:ViewModel="clr-namespace:EasyVideoWin.ViewModel"
        mc:Ignorable="d"
        Height="420" Width="870" WindowStartupLocation="CenterOwner" ShowInTaskbar="False"
        WindowStyle="None" ResizeMode="NoResize" AllowsTransparency="True" Background="Transparent">
    <Window.DataContext>
        <ViewModel:MediaStatisticsViewModel />
    </Window.DataContext>
    <Viewbox VerticalAlignment="Top">
    <Grid>
        <Grid.RowDefinitions>
            <RowDefinition Height="40" />
            <RowDefinition Height="*" />
        </Grid.RowDefinitions>
        <Grid Grid.Row="0" Background="White">
            <TextBlock Text="{DynamicResource MEDIA_STATISTICS}" FontSize="16" Foreground="#313131" HorizontalAlignment="Center" VerticalAlignment="Center"/>
            <Button x:Name="closeButton" Content="{DynamicResource CLOSE}" FontSize="14" Background="Transparent" HorizontalAlignment="Right" VerticalAlignment="Center" 
                    Margin="0, 0, 20, 0" BorderBrush="Transparent" Click="OnCloseBtnClick">
                <Button.Style>
                    <Style TargetType="{x:Type Button}">
                        <Setter Property="Foreground" Value="#919191"/>
                        <Setter Property="Template">
                            <Setter.Value>
                                <ControlTemplate TargetType="{x:Type Button}">
                                    <Border Background="{TemplateBinding Background}">
                                        <Grid>
                                            <ContentPresenter Content="{TemplateBinding Content}"/>
                                        </Grid>
                                    </Border>
                                    <ControlTemplate.Triggers>
                                        <Trigger Property="IsMouseOver" Value="True">
                                            <Setter Property="Foreground" Value="#313131"/>
                                        </Trigger>
                                        <Trigger Property="IsPressed" Value="True">
                                            <Setter Property="Foreground" Value="#313131"/>
                                        </Trigger>
                                    </ControlTemplate.Triggers>
                                </ControlTemplate>
                            </Setter.Value>
                        </Setter>
                    </Style>
                </Button.Style>
            </Button>
        </Grid>
        <Grid Grid.Row="1" Background="Transparent">
            <DataGrid Name="dataGrid1"  AutoGenerateColumns="False" CanUserAddRows="False" GridLinesVisibility="None" BorderBrush="Transparent" RowHeaderWidth="0"
                      ItemsSource="{Binding MediaStatisticsItemList, Mode=TwoWay}" Background="Transparent" AlternationCount="2" Margin="-2, -2, -2, 0">
                <DataGrid.Columns>
                    <DataGridTextColumn Header="{DynamicResource MEDIA_ORIENTATION}" Width="140" Binding="{Binding MediaOrientation, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" Foreground="#313131" FontSize="14" FontWeight="Bold"/>
                    <DataGridTextColumn Header="{DynamicResource CODEC}" Width="230" Binding="{Binding Codec, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"/>
                    <DataGridTextColumn Header="{DynamicResource LINE_RATE}" Width="90" Binding="{Binding LineRate, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"/>
                    <DataGridTextColumn Header="{DynamicResource ACTUAL_LINE_RATE}" Width="90" Binding="{Binding ActualLineRate, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"/>
                    <DataGridTextColumn Header="{DynamicResource RESOLUTION}" Width="100" Binding="{Binding Resolution, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"/>
                    <DataGridTextColumn Header="{DynamicResource FRAME_RATE}" Width="90" Binding="{Binding FrameRate, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"/>
                    <DataGridTextColumn Header="{DynamicResource PACKET_LOSS_RATE}" Width="120" Binding="{Binding PacketLossInfo, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"/>
                    <DataGridTextColumn Header="{DynamicResource SAFETY}" Width="140" Binding="{Binding Encrypted, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"/>
                </DataGrid.Columns>
                <DataGrid.ColumnHeaderStyle>
                    <Style TargetType="DataGridColumnHeader">
                        <Setter Property="Foreground" Value="#313131"/>
                        <Setter Property="FontSize" Value="14"/>
                        <Setter Property="FontWeight" Value="Bold"/>
                        <Setter Property="Background" Value="#e5f4f4f4"/>
                        <Setter Property="BorderBrush" Value="Transparent"/>
                        <Setter Property="Height" Value="55"/>
                        <Setter Property="VerticalAlignment" Value="Center"/>
                        <Setter Property="Padding" Value="22, 0 , 0 ,0"/>
                        <Setter Property="ContentTemplate">
                            <Setter.Value>
                                <DataTemplate>
                                    <TextBlock TextWrapping="Wrap" Text="{Binding}"/>
                                </DataTemplate>
                            </Setter.Value>
                        </Setter>
                    </Style>
                </DataGrid.ColumnHeaderStyle>
                <DataGrid.RowStyle>
                    <Style TargetType="{x:Type DataGridRow}">
                        <Setter Property="Height" Value="38"/>
                        <Setter Property="VerticalAlignment" Value="Center"/>
                        <Setter Property="Foreground" Value="#313131"/>
                        <Setter Property="FontSize" Value="14"/>
                        <Style.Triggers>
                            <!--隔行换色-->
                            <Trigger Property="AlternationIndex" Value="0" >
                                <Setter Property="Background" Value="#e5ffffff" />
                            </Trigger>
                            <Trigger Property="AlternationIndex" Value="1" >
                                <Setter Property="Background" Value="#e5f4f4f4" />
                            </Trigger>
                        </Style.Triggers>
                    </Style>
                </DataGrid.RowStyle>
                <DataGrid.CellStyle>
                    <Style TargetType="{x:Type DataGridCell}">
                        <Setter Property="VerticalAlignment" Value="Center"/>
                        <Setter Property="Padding" Value="20, 0, 0, 0"/>
                        <Setter Property="Template">
                            <Setter.Value>
                                <ControlTemplate TargetType="{x:Type DataGridCell}">
                                    <Border Padding="{TemplateBinding Padding}" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Background="{TemplateBinding Background}" SnapsToDevicePixels="True">
                                        <ContentPresenter SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"/>
                                    </Border>
                                </ControlTemplate>
                            </Setter.Value>
                        </Setter>
                    </Style>
                    
                </DataGrid.CellStyle>

            </DataGrid>
        </Grid>
    </Grid>
    </Viewbox>
</Window>
